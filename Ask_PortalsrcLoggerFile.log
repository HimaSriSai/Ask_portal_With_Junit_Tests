Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@6aec0b01, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@6aec0b01, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
After test method: context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@6aec0b01, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@6aec0b01, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@aaf9d7b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@aaf9d7b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@aaf9d7b, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@aaf9d7b, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@4f45884b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@4f45884b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@4f45884b, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@4f45884b, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@517cb4f5 testClass = TestViewModel, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@624a369 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.login.controller.LoginControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@7340f13f declaringClass = 'com.prokarma.login.controller.LoginControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.login.controller.LoginControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.login.controller.LoginControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1d277932, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1d277932, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Autowiring by type from bean name 'com.prokarma.login.controller.LoginControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1668919e'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@83e0adf]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@86639f2]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@17068ee8]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@40f12892]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='mohan']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@41710f71] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1d277932, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1d277932, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5e567aa8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5e567aa8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1671a535]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@5fb22a0d]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@32dc8869]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@2573eff7]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing GET request for [/ask/sampleLogin]
Looking up handler method for path /ask/sampleLogin
Returning handler method [public java.lang.String com.prokarma.login.controller.LoginController.sample()]
Returning cached instance of singleton bean 'loginController'
Last-Modified value for [/ask/sampleLogin] is: -1
Written [welcome to login controller] as "text/plain" using [org.springframework.http.converter.StringHttpMessageConverter@73d07ad9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5e567aa8, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5e567aa8, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@7ad4e824, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@7ad4e824, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@38fefae9]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@4888499d]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@15401d60]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@7f902f7]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='madhu']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@2cafd2b0] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@7ad4e824, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@7ad4e824, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6118a8cc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6118a8cc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2489a791]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@76e1dbe2]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@521b533a]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@1a46f6f4]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 16 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Failed to resolve argument 0 of type 'com.prokarma.login.model.UserModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.login.controller.LoginControllerTest.testCheckCredentialsError(LoginControllerTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d6948a; line: 1, column: 14]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6118a8cc, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6118a8cc, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@ec8abee, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@ec8abee, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@569c2ade]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@297383fc]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62afcae7]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@4fde5241]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@511e488f] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@ec8abee, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@ec8abee, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6c6f54b7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6c6f54b7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@114fdda7]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@32b6b531]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@246a853c]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@326ef7ea]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 16 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@2a08a253] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7917a40]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6c6f54b7, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6c6f54b7, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@17b1b45 testClass = LoginControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@24589282 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.sme.service.SMEServiceTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@60ebde43 declaringClass = 'com.prokarma.sme.service.SMEServiceTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.sme.service.SMEServiceTest]
@TestExecutionListeners is not present for class [com.prokarma.sme.service.SMEServiceTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Autowiring by type from bean name 'com.prokarma.sme.service.SMEServiceTest' to bean named 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@594d0ad3]
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdatePost() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdateReply() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch()
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.sme.service.SMEServiceTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@45ce737e transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.sme.service.SMEServiceTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdateReply]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@57902d94] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@57902d94] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6a5fcb32]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@57902d94]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@57902d94] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@594d0ad3, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@40e66634]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdatePost]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@11da6a9b] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@11da6a9b] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6a5fcb32]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@11da6a9b]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@11da6a9b] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@40e66634, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@2739ae5d]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@7193dba3] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@7193dba3] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6a5fcb32]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@7193dba3]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@7193dba3] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2739ae5d, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@237c463]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyNameCatch]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@40fbf80c] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@40fbf80c] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6a5fcb32]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@40fbf80c]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@40fbf80c] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@237c463, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@35633e30 testClass = SMEServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4d5c7e4 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
Closing org.springframework.web.context.support.GenericWebApplicationContext@1668919e: startup date [Tue Aug 21 13:14:39 IST 2018]; root of context hierarchy
Returning cached instance of singleton bean 'lifecycleProcessor'
Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@41be8db9: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,configurationClass,adminController,adminDAOImpl,adminServiceImpl,askAspectClass,forgotPasswordController,forgotPasswordDaoImpl,forgotPasswordServiceImpl,mailServiceImpl,loginController,loginDaoImple,loginServiceImpl,menuDaoImpl,menuServiceImpl,postQueryController,postQueryDaoImpl,postQueryServiceImpl,searchController,smeController,smeDaoImpl,smeServiceImpl,newUserController,retrieveUserProfileController,updateUserProfileController,retrieveUserProfileDaoImpl,viewController,viewDaoImpl,viewAllPostService,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,dataSource,transactionManager,jdbcTemplate,namedparameterjdbctemplate,javaMailSenderImpl,userProfileDao,mailService,forgotpasswordservice,newUserService,newUserProfile,searchService,searchDao,retrieveUserProfileServiceImpl,updateUserProfileDaoImpl,updateUserProfileServiceImpl]; root of factory hierarchy
Retrieved dependent beans for bean 'mvcResourceUrlProvider': [requestMappingHandlerMapping]
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1668919e: startup date [Tue Aug 21 14:22:57 IST 2018]; root of context hierarchy
Overriding bean definition for bean 'postQueryDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.dao.PostQueryDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\dao\PostQueryDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'postQueryServiceImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.service.PostQueryServiceImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\service\PostQueryServiceImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryServiceImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'retrieveUserProfileDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.userprofile.dao.RetrieveUserProfileDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\userprofile\dao\RetrieveUserProfileDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=retrieveUserProfileDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
Mapped "{[/ask/getNames],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.FullNamesList> com.prokarma.admin.controller.AdminController.getNames()
Mapped "{[/ask/addEmpAsSme],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.ResponseMsg> com.prokarma.admin.controller.AdminController.addEmpAsSme(com.prokarma.admin.model.RequestDetails)
Mapped "{[/ask/resetPassword],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)
Mapped "{[/ask/sampleLogin],methods=[GET]}" onto public java.lang.String com.prokarma.login.controller.LoginController.sample()
Mapped "{[/ask/checkCredentials],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)
Mapped "{[/ask/postquery],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException
Mapped "{[/ask/getCategories],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.prokarma.searchquery.controller.SearchController.resetRequest()
Mapped "{[/ask/getCtrgyName],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.SmeCtrgyName com.prokarma.sme.controller.SmeController.replyOnPost(com.prokarma.sme.model.SmeCtrgyName)
Mapped "{[/ask/updateReplyStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updateReplyStatus(com.prokarma.sme.model.UpdateReplyQuery) throws java.text.ParseException
Mapped "{[/ask/updatePostStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updatePostStatus(com.prokarma.sme.model.UpdatePostQuery) throws java.text.ParseException
Mapped "{[/ask/addUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.ResponseBean> com.prokarma.userprofile.controller.NewUserController.resetRequest(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/editUser/{emp_id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.UserProfileBean> com.prokarma.userprofile.controller.RetrieveUserProfileController.getUserProfile(int)
Mapped "{[/ask/updateUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.userprofile.model.ResponseBean com.prokarma.userprofile.controller.UpdateUserProfileController.updateUser(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/replyOnPost],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.viewpost.model.ResponseModelOnRply com.prokarma.viewpost.controller.ViewController.replyOnPost(com.prokarma.viewpost.model.ReplyOnPost) throws java.text.ParseException
Mapped "{[/ask/getAll],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.Set<com.prokarma.viewpost.model.PostReplyModelSet>> com.prokarma.viewpost.controller.ViewController.getAll(com.prokarma.viewpost.model.SearchInfoModel)
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1668919e: startup date [Tue Aug 21 14:22:57 IST 2018]; root of context hierarchy
Began transaction (1) for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@1a8b3791, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 31 ms
Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
Rolled back transaction after test execution for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@1a8b3791, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
EmployeeID Already Registered! Please Login
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 16 ms
UserName Already Exist! Please Try With Another
Began transaction (2) for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3c93376b, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3c93376b, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@4f3e34b5, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 16 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@4d6162af; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@4f3e34b5, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@ca28b65, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully Added
Rolled back transaction after test execution for test context [DefaultTestContext@5bcc10fa testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@ca28b65, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7cdab66c testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Began transaction (1) for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@17a87544, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@17a87544, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (2) for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@65f5912f, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully updated
Rolled back transaction after test execution for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@65f5912f, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@6664f50, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@1b022498; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@6664f50, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@13d498d2, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed To update User Credentials
Rolled back transaction after test execution for test context [DefaultTestContext@66f79c80 testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@13d498d2, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3241074 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Method Initiated
End of Method
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 16 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@55c6b6e4; line: 1, column: 12]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@2d12248c; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@72e92db1; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@2213e7b7; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 2 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@7b5c85f8; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 1 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 1 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@7690e3db; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Began transaction (1) for test context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@7d322dac, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
DispatcherServlet with name '' processing POST request for [/ask/resetPassword]
Looking up handler method for path /ask/resetPassword
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)]
Returning cached instance of singleton bean 'forgotPasswordController'
Read [class com.prokarma.forgotpassword.model.ForgotPasswordModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL query
Executing prepared SQL statement [select email_id ,user_key,emp_id  from  ask.ask_user_tbl where email_id=?]
null0null

Written [com.prokarma.forgotpassword.model.ResponseModel@7800114f] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@7d322dac, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@410d9658] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@7d322dac, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@7d322dac, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@7d322dac, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@3bab7b9b testClass = ForgotPasswordTestController, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2efa352c testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.postquery.controller.PostQueryControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@682ac426 declaringClass = 'com.prokarma.postquery.controller.PostQueryControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.postquery.controller.PostQueryControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.postquery.controller.PostQueryControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Autowiring by type from bean name 'com.prokarma.postquery.controller.PostQueryControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1668919e'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc]
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostError' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostError() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.setUp() throws java.lang.Exception
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.postquery.controller.PostQueryControllerTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@789fcc18 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.postquery.controller.PostQueryControllerTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testAleardyOthers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@adffa02] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@adffa02] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@356e2a36]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@37208dc0]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@31d97830]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@44239be3]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Method Initiated
Executing prepared SQL query
Executing prepared SQL statement [select ctgry_name from ask.ASK_CTGRY_TBL]
End of Method
Written [com.prokarma.postquery.model.ResponseMsgModel@345bbc4] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@adffa02]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@adffa02] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2288e1fc, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostError' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostError]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@3c5714a1] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@3c5714a1] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@12621374]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@76f140b9]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3cf4a2bf]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@38824b9c]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Failed to resolve argument 0 of type 'com.prokarma.postquery.model.PostQueryModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.postquery.controller.PostQueryControllerTest.testPostError(PostQueryControllerTest.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@48a526ee; line: 1, column: 11]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@3c5714a1]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@3c5714a1] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70028eb7, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@70dce21]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@4f80fb03] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@4f80fb03] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@5b903e26]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@32059fb3]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5923b94]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@4d8280c6]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 15 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_POST_TBL values(ask.post_id_seq.nextval,?,?,?,?,?,?,?)]
SQL update affected 1 rows
Query Successfully posted
Written [com.prokarma.postquery.model.ResponseMsgModel@345bbc4] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@4f80fb03]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@4f80fb03] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@70dce21, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testSuccessOthers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@4458e8ff] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@4458e8ff] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1c0b6d3c]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@6d7d1a53]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5e32fcc2]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5d2ef8eb]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Method Initiated
Executing prepared SQL query
Executing prepared SQL statement [select ctgry_name from ask.ASK_CTGRY_TBL]
End of Method
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]
SQL update affected 1 rows
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_POST_TBL values(ask.post_id_seq.nextval,?,?,?,?,?,?,?)]
SQL update affected 1 rows
Query Successfully posted
Written [com.prokarma.postquery.model.ResponseMsgModel@345bbc4] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@4458e8ff]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@4458e8ff] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@95f1b1d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostFail]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@7c7f5a29] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@7c7f5a29] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (5) for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@3ed14dbd]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@28f52242]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1e326748]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@189ac8b5]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]
Translating SQLException with SQL state '23000', error code '1400', message [ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")
]; SQL was [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)] for task [PreparedStatementCallback]
Failed To post query PreparedStatementCallback; SQL [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]; ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")

Written [com.prokarma.postquery.model.ResponseMsgModel@345bbc4] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@7c7f5a29]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@7c7f5a29] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1fa1326f, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@4909fa44 testClass = PostQueryControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2e88ead7 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.viewpost.model.TestViewModel].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@1b1e54e8 declaringClass = 'com.prokarma.viewpost.model.TestViewModel', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.viewpost.model.TestViewModel]
@TestExecutionListeners is not present for class [com.prokarma.viewpost.model.TestViewModel]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@1b4998c0, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@1b4998c0, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
After test method: context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@1b4998c0, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@1b4998c0, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5d4f3907, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5d4f3907, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5d4f3907, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5d4f3907, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5f4ef646, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5f4ef646, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5f4ef646, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5f4ef646, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@2202d2ed testClass = TestViewModel, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@222c5e06 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.login.controller.LoginControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@7f670dfb declaringClass = 'com.prokarma.login.controller.LoginControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.login.controller.LoginControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.login.controller.LoginControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6098b3c7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6098b3c7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Autowiring by type from bean name 'com.prokarma.login.controller.LoginControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@1668919e'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@4af59ccb]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@74b11ee7]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@578afa50]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@1271a1cf]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='mohan']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@4de6973c] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6098b3c7, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@6098b3c7, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@592d5234, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@592d5234, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@bd866d8]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@72fe4fe8]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@41710f71]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5e567aa8]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 15 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing GET request for [/ask/sampleLogin]
Looking up handler method for path /ask/sampleLogin
Returning handler method [public java.lang.String com.prokarma.login.controller.LoginController.sample()]
Returning cached instance of singleton bean 'loginController'
Last-Modified value for [/ask/sampleLogin] is: -1
Written [welcome to login controller] as "text/plain" using [org.springframework.http.converter.StringHttpMessageConverter@1f657fe5]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@592d5234, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@592d5234, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@3ede90d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@3ede90d, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2bb78562]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@1f995da6]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@73d07ad9]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@7ad4e824]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='madhu']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@7f902f7] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@3ede90d, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@3ede90d, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@481f9953, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@481f9953, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@576f4b4b]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@184e05eb]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2cafd2b0]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@6118a8cc]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Failed to resolve argument 0 of type 'com.prokarma.login.model.UserModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.login.controller.LoginControllerTest.testCheckCredentialsError(LoginControllerTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@76e1dbe2; line: 1, column: 14]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@481f9953, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@481f9953, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1a46f6f4, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1a46f6f4, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@bdc8448]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@3d6948a]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2e8a3352]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@ec8abee]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@297383fc] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1a46f6f4, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1a46f6f4, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@62afcae7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@62afcae7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@78235bbe]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@4dfa4b25]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@511e488f]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@6c6f54b7]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 15 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@32b6b531] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@7463bc9d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@62afcae7, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@62afcae7, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@339c8a67 testClass = LoginControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@54201c6b testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.sme.service.SMEServiceTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@290fe514 declaringClass = 'com.prokarma.sme.service.SMEServiceTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.sme.service.SMEServiceTest]
@TestExecutionListeners is not present for class [com.prokarma.sme.service.SMEServiceTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Autowiring by type from bean name 'com.prokarma.sme.service.SMEServiceTest' to bean named 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@2672eea0]
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdatePost() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdateReply() throws java.text.ParseException
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.sme.service.SMEServiceTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@2a3c16e2 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.sme.service.SMEServiceTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdateReply]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@65990bb3] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@65990bb3] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@65990bb3]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@65990bb3] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2672eea0, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@645ec259]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdatePost]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@22e6a0e2] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@22e6a0e2] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@22e6a0e2]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@22e6a0e2] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@645ec259, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@6827395a]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@45ce737e] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@45ce737e] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@45ce737e]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@45ce737e] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@6827395a, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@57902d94]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyNameCatch]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@40e66634] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@40e66634] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@56b0c327]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@40e66634]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@40e66634] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@57902d94, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@4fe577e5 testClass = SMEServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@467ac05c testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
Closing org.springframework.web.context.support.GenericWebApplicationContext@1668919e: startup date [Tue Aug 21 14:22:57 IST 2018]; root of context hierarchy
Returning cached instance of singleton bean 'lifecycleProcessor'
Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@41be8db9: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,configurationClass,adminController,adminDAOImpl,adminServiceImpl,askAspectClass,forgotPasswordController,forgotPasswordDaoImpl,forgotPasswordServiceImpl,mailServiceImpl,loginController,loginDaoImple,loginServiceImpl,menuDaoImpl,menuServiceImpl,postQueryController,postQueryDaoImpl,postQueryServiceImpl,searchController,smeController,smeDaoImpl,smeServiceImpl,newUserController,retrieveUserProfileController,updateUserProfileController,retrieveUserProfileDaoImpl,viewController,viewDaoImpl,viewAllPostService,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,dataSource,transactionManager,jdbcTemplate,namedparameterjdbctemplate,javaMailSenderImpl,userProfileDao,mailService,forgotpasswordservice,newUserService,newUserProfile,searchService,searchDao,retrieveUserProfileServiceImpl,updateUserProfileDaoImpl,updateUserProfileServiceImpl]; root of factory hierarchy
Retrieved dependent beans for bean 'mvcResourceUrlProvider': [requestMappingHandlerMapping]
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4f6ee6e4: startup date [Tue Aug 21 14:25:29 IST 2018]; root of context hierarchy
Overriding bean definition for bean 'postQueryDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.dao.PostQueryDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\dao\PostQueryDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'postQueryServiceImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.service.PostQueryServiceImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\service\PostQueryServiceImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryServiceImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'retrieveUserProfileDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.userprofile.dao.RetrieveUserProfileDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\userprofile\dao\RetrieveUserProfileDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=retrieveUserProfileDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
Mapped "{[/ask/getNames],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.FullNamesList> com.prokarma.admin.controller.AdminController.getNames()
Mapped "{[/ask/addEmpAsSme],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.ResponseMsg> com.prokarma.admin.controller.AdminController.addEmpAsSme(com.prokarma.admin.model.RequestDetails)
Mapped "{[/ask/resetPassword],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)
Mapped "{[/ask/checkCredentials],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)
Mapped "{[/ask/sampleLogin],methods=[GET]}" onto public java.lang.String com.prokarma.login.controller.LoginController.sample()
Mapped "{[/ask/postquery],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException
Mapped "{[/ask/getCategories],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.prokarma.searchquery.controller.SearchController.resetRequest()
Mapped "{[/ask/updateReplyStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updateReplyStatus(com.prokarma.sme.model.UpdateReplyQuery) throws java.text.ParseException
Mapped "{[/ask/getCtrgyName],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.SmeCtrgyName com.prokarma.sme.controller.SmeController.replyOnPost(com.prokarma.sme.model.SmeCtrgyName)
Mapped "{[/ask/updatePostStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updatePostStatus(com.prokarma.sme.model.UpdatePostQuery) throws java.text.ParseException
Mapped "{[/ask/addUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.ResponseBean> com.prokarma.userprofile.controller.NewUserController.resetRequest(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/editUser/{emp_id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.UserProfileBean> com.prokarma.userprofile.controller.RetrieveUserProfileController.getUserProfile(int)
Mapped "{[/ask/updateUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.userprofile.model.ResponseBean com.prokarma.userprofile.controller.UpdateUserProfileController.updateUser(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/getAll],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.Set<com.prokarma.viewpost.model.PostReplyModelSet>> com.prokarma.viewpost.controller.ViewController.getAll(com.prokarma.viewpost.model.SearchInfoModel)
Mapped "{[/ask/replyOnPost],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.viewpost.model.ResponseModelOnRply com.prokarma.viewpost.controller.ViewController.replyOnPost(com.prokarma.viewpost.model.ReplyOnPost) throws java.text.ParseException
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4f6ee6e4: startup date [Tue Aug 21 14:25:29 IST 2018]; root of context hierarchy
Began transaction (1) for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@6136998b, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 31 ms
Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
Rolled back transaction after test execution for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@6136998b, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
EmployeeID Already Registered! Please Login
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
UserName Already Exist! Please Try With Another
Began transaction (2) for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@35c4e864, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@35c4e864, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3127cb44, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@68d6d775; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3127cb44, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@b67cc70, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully Added
Rolled back transaction after test execution for test context [DefaultTestContext@6edcd0d8 testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@b67cc70, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@57ce634f testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 2 ms
Began transaction (1) for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@4d9754a8, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@4d9754a8, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (2) for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@64c781a9, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully updated
Rolled back transaction after test execution for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@64c781a9, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@b73433, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@1f939a0f; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@b73433, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@45658133, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed To update User Credentials
Rolled back transaction after test execution for test context [DefaultTestContext@49469ffa testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@45658133, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7a3b7122 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Method Initiated
End of Method
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@18a19e; line: 1, column: 12]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@ed2f2f6; line: 1, column: 11]
Began transaction (1) for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1727e03a, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Method Initiated
End of Method
Rolled back transaction after test execution for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@1727e03a, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (2) for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@10b687f2, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@991cbde; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@10b687f2, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@78d71df1, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Query Successfully posted
Rolled back transaction after test execution for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@78d71df1, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@4dac121d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Method Initiated
End of Method
Query Successfully posted
Rolled back transaction after test execution for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@4dac121d, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (5) for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3b332962, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed To post query PreparedStatementCallback; SQL [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]; ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")

Rolled back transaction after test execution for test context [DefaultTestContext@4a8ffd75 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3b332962, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7f9e8421 testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@3d299393; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@34414ffc; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@627ff1b8; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@e700eba; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Began transaction (1) for test context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@6babffb5, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
DispatcherServlet with name '' processing POST request for [/ask/resetPassword]
Looking up handler method for path /ask/resetPassword
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)]
Returning cached instance of singleton bean 'forgotPasswordController'
Read [class com.prokarma.forgotpassword.model.ForgotPasswordModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Executing prepared SQL query
Executing prepared SQL statement [select email_id ,user_key,emp_id  from  ask.ask_user_tbl where email_id=?]
null0null

Written [com.prokarma.forgotpassword.model.ResponseModel@abad89c] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@6babffb5, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@15fb4566] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@6babffb5, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@6babffb5, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@6babffb5, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@671d03bb testClass = ForgotPasswordTestController, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2173a742 testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.login.controller.LoginControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@2a47597 declaringClass = 'com.prokarma.login.controller.LoginControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.login.controller.LoginControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.login.controller.LoginControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5fcd1f0a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5fcd1f0a, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Autowiring by type from bean name 'com.prokarma.login.controller.LoginControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@4f6ee6e4'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@7698b7a4]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@7a9ceddf]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@28157173]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@11c713b7]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='mohan']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@1e5eb20a] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5fcd1f0a, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5fcd1f0a, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@4538856f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@4538856f, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@74b86971]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@1f9d4b0e]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1e8fb66f]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@3d8d17a3]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing GET request for [/ask/sampleLogin]
Looking up handler method for path /ask/sampleLogin
Returning handler method [public java.lang.String com.prokarma.login.controller.LoginController.sample()]
Returning cached instance of singleton bean 'loginController'
Last-Modified value for [/ask/sampleLogin] is: -1
Written [welcome to login controller] as "text/plain" using [org.springframework.http.converter.StringHttpMessageConverter@47829d6d]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@4538856f, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@4538856f, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@2f677247, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@2f677247, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@7a1b8a46]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@2921199d]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3d40a3b4]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@7f13811b]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 16 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='madhu']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@1983b48a] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@2f677247, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@2f677247, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@629a9f26, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@629a9f26, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@4391a2d8]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@47b269c4]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@71e7adbb]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@32091c14]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 15 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Failed to resolve argument 0 of type 'com.prokarma.login.model.UserModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.login.controller.LoginControllerTest.testCheckCredentialsError(LoginControllerTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4451f60c; line: 1, column: 14]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@629a9f26, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@629a9f26, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@64bebd55, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@64bebd55, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@3730f716]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@7730ef88]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@66f5a02e]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@4e3f2908]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@45843650] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@64bebd55, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@64bebd55, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@72443081, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@72443081, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6588b715]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@15a3b42]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@52c9d3d0]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@17207f5b]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@7b2bf745] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@715a70e9]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@72443081, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@72443081, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@5ff6dd3c testClass = LoginControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@12f279b5 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.sme.service.SMEServiceTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@27fe059d declaringClass = 'com.prokarma.sme.service.SMEServiceTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.sme.service.SMEServiceTest]
@TestExecutionListeners is not present for class [com.prokarma.sme.service.SMEServiceTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Autowiring by type from bean name 'com.prokarma.sme.service.SMEServiceTest' to bean named 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@2ba1209b]
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdatePost() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdateReply() throws java.text.ParseException
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.sme.service.SMEServiceTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@2b73bd6b transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.sme.service.SMEServiceTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdateReply]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@157d3a45] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@157d3a45] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@157d3a45]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@157d3a45] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ba1209b, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@750ed637]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdatePost]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@5190010f] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@5190010f] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@5190010f]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@5190010f] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@750ed637, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@673e76b3]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@1bedc703] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@1bedc703] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@1bedc703]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@1bedc703] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@673e76b3, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@18d11527]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyNameCatch]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@4998e74b] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@4998e74b] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69e49a81]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@4998e74b]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@4998e74b] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@18d11527, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@4342c13 testClass = SMEServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@766a52f5 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
Closing org.springframework.web.context.support.GenericWebApplicationContext@4f6ee6e4: startup date [Tue Aug 21 14:25:29 IST 2018]; root of context hierarchy
Returning cached instance of singleton bean 'lifecycleProcessor'
Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@625732: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,configurationClass,adminController,adminDAOImpl,adminServiceImpl,askAspectClass,forgotPasswordController,forgotPasswordDaoImpl,forgotPasswordServiceImpl,mailServiceImpl,loginController,loginDaoImple,loginServiceImpl,menuDaoImpl,menuServiceImpl,postQueryController,postQueryDaoImpl,postQueryServiceImpl,searchController,smeController,smeDaoImpl,smeServiceImpl,newUserController,retrieveUserProfileController,updateUserProfileController,retrieveUserProfileDaoImpl,viewController,viewDaoImpl,viewAllPostService,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,dataSource,transactionManager,jdbcTemplate,namedparameterjdbctemplate,javaMailSenderImpl,userProfileDao,mailService,forgotpasswordservice,newUserService,newUserProfile,searchService,searchDao,retrieveUserProfileServiceImpl,updateUserProfileDaoImpl,updateUserProfileServiceImpl]; root of factory hierarchy
Retrieved dependent beans for bean 'mvcResourceUrlProvider': [requestMappingHandlerMapping]
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6913c1fb: startup date [Tue Aug 21 14:26:11 IST 2018]; root of context hierarchy
Overriding bean definition for bean 'postQueryDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.dao.PostQueryDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\dao\PostQueryDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'postQueryServiceImpl' with a different definition: replacing [Generic bean: class [com.prokarma.postquery.service.PostQueryServiceImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\postquery\service\PostQueryServiceImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=postQueryServiceImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Overriding bean definition for bean 'retrieveUserProfileDaoImpl' with a different definition: replacing [Generic bean: class [com.prokarma.userprofile.dao.RetrieveUserProfileDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\khima\Desktop\ASK_BACKEND_CODE (1)\ASK_BACKEND_CODE\target\classes\com\prokarma\userprofile\dao\RetrieveUserProfileDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=configurationClass; factoryMethodName=retrieveUserProfileDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in com.prokarma.common.config.ConfigurationClass]
Loaded JDBC driver: oracle.jdbc.driver.OracleDriver
Mapped "{[/ask/addEmpAsSme],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.ResponseMsg> com.prokarma.admin.controller.AdminController.addEmpAsSme(com.prokarma.admin.model.RequestDetails)
Mapped "{[/ask/getNames],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.admin.model.FullNamesList> com.prokarma.admin.controller.AdminController.getNames()
Mapped "{[/ask/resetPassword],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)
Mapped "{[/ask/checkCredentials],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)
Mapped "{[/ask/sampleLogin],methods=[GET]}" onto public java.lang.String com.prokarma.login.controller.LoginController.sample()
Mapped "{[/ask/postquery],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException
Mapped "{[/ask/getCategories],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.List<java.lang.String>> com.prokarma.searchquery.controller.SearchController.resetRequest()
Mapped "{[/ask/getCtrgyName],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.SmeCtrgyName com.prokarma.sme.controller.SmeController.replyOnPost(com.prokarma.sme.model.SmeCtrgyName)
Mapped "{[/ask/updatePostStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updatePostStatus(com.prokarma.sme.model.UpdatePostQuery) throws java.text.ParseException
Mapped "{[/ask/updateReplyStatus],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.sme.model.ResponseOnUpdate com.prokarma.sme.controller.SmeController.updateReplyStatus(com.prokarma.sme.model.UpdateReplyQuery) throws java.text.ParseException
Mapped "{[/ask/addUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.ResponseBean> com.prokarma.userprofile.controller.NewUserController.resetRequest(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/editUser/{emp_id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<com.prokarma.userprofile.model.UserProfileBean> com.prokarma.userprofile.controller.RetrieveUserProfileController.getUserProfile(int)
Mapped "{[/ask/updateUser],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.userprofile.model.ResponseBean com.prokarma.userprofile.controller.UpdateUserProfileController.updateUser(com.prokarma.userprofile.model.UserProfileBean)
Mapped "{[/ask/replyOnPost],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public com.prokarma.viewpost.model.ResponseModelOnRply com.prokarma.viewpost.controller.ViewController.replyOnPost(com.prokarma.viewpost.model.ReplyOnPost) throws java.text.ParseException
Mapped "{[/ask/getAll],methods=[POST],consumes=[application/json],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.util.Set<com.prokarma.viewpost.model.PostReplyModelSet>> com.prokarma.viewpost.controller.ViewController.getAll(com.prokarma.viewpost.model.SearchInfoModel)
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6913c1fb: startup date [Tue Aug 21 14:26:11 IST 2018]; root of context hierarchy
Began transaction (1) for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@34a0ef00, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 30 ms
Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
Rolled back transaction after test execution for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@34a0ef00, testMethod = testInvalidMail@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
EmployeeID Already Registered! Please Login
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
UserName Already Exist! Please Try With Another
Began transaction (2) for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@7112ce6, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@7112ce6, testMethod = testSameFisrtAndLastName@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3ba3d4b6, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@e280403; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@3ba3d4b6, testMethod = testBadReq@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@42f85fa4, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully Added
Rolled back transaction after test execution for test context [DefaultTestContext@365553de testClass = NewUserControllerTest, testInstance = com.prokarma.userprofile.controller.NewUserControllerTest@42f85fa4, testMethod = testNewUserSuccess@NewUserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5c0f79f0 testClass = NewUserControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Began transaction (1) for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@1a256d80, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Rolled back transaction after test execution for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@1a256d80, testMethod = updateSameFisrtAndLastName@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (2) for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@fb0a08c, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
User Credentials Successfully updated
Rolled back transaction after test execution for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@fb0a08c, testMethod = testupdateProfile@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (3) for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@60e06f7d, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@18a19e; line: 1, column: 11]
Rolled back transaction after test execution for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@60e06f7d, testMethod = testBadReq@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Began transaction (4) for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@60a7e509, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed To update User Credentials
Rolled back transaction after test execution for test context [DefaultTestContext@50eb4a2c testClass = UpdateUserProfileControllerTest, testInstance = com.prokarma.userprofile.controller.UpdateUserProfileControllerTest@60a7e509, testMethod = testupdateProfileFail@UpdateUserProfileControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3069a360 testClass = UpdateUserProfileControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Method Initiated
End of Method
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@1cd43562; line: 1, column: 12]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@29050de5; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@e09f1b6; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@750f64fe; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@5a7df831; line: 1, column: 24]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 15 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: java.io.PushbackInputStream@79980d8d; line: 1, column: 11]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
Began transaction (1) for test context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@5ff6dd3c, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
FrameworkServlet '': initialization completed in 0 ms
DispatcherServlet with name '' processing POST request for [/ask/resetPassword]
Looking up handler method for path /ask/resetPassword
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.forgotpassword.model.ResponseModel> com.prokarma.forgotpassword.controller.ForgotPasswordController.resetRequest(com.prokarma.forgotpassword.model.ForgotPasswordModel)]
Returning cached instance of singleton bean 'forgotPasswordController'
Read [class com.prokarma.forgotpassword.model.ForgotPasswordModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL query
Executing prepared SQL statement [select email_id ,user_key,emp_id  from  ask.ask_user_tbl where email_id=?]
null0null

Written [com.prokarma.forgotpassword.model.ResponseModel@40d52be7] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@5ff6dd3c, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@576b7c74] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@5ff6dd3c, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@5ff6dd3c, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = com.prokarma.forgotpasswordtest.controller.ForgotPasswordTestController@5ff6dd3c, testMethod = testEmpNotRes@ForgotPasswordTestController, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@12f279b5 testClass = ForgotPasswordTestController, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fcd1f0a testClass = ForgotPasswordTestController, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.postquery.controller.PostQueryControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@7d8cf9ac declaringClass = 'com.prokarma.postquery.controller.PostQueryControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.postquery.controller.PostQueryControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.postquery.controller.PostQueryControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Autowiring by type from bean name 'com.prokarma.postquery.controller.PostQueryControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@6913c1fb'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostError' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30]
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostError() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers() throws java.lang.Exception
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.postquery.controller.PostQueryControllerTest.setUp() throws java.lang.Exception
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testAleardyOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.postquery.controller.PostQueryControllerTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@5d878b25 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.postquery.controller.PostQueryControllerTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testAleardyOthers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@28279a49] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@28279a49] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@384fda47]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@3663d0ba]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@575cabf0]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@433d9680]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Method Initiated
Executing prepared SQL query
Executing prepared SQL statement [select ctgry_name from ask.ASK_CTGRY_TBL]
End of Method
Written [com.prokarma.postquery.model.ResponseMsgModel@60f77af] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@28279a49]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@28279a49] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@337a6d30, testMethod = testAleardyOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostError' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostError]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@422ab737] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@422ab737] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@3fe512d2]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@3fde8f7c]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@11d86b9d]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@6dce59e]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Failed to resolve argument 0 of type 'com.prokarma.postquery.model.PostQueryModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.postquery.controller.PostQueryControllerTest.testPostError(PostQueryControllerTest.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
Resolving exception from handler [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@4293e066; line: 1, column: 11]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@422ab737]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@422ab737] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@2574a9e3, testMethod = testPostError@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostQuery' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@3946075] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@3946075] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@122635ef]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@2ac519dc]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3d53e6f7]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@1de4bee0]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_POST_TBL values(ask.post_id_seq.nextval,?,?,?,?,?,?,?)]
SQL update affected 1 rows
Query Successfully posted
Written [com.prokarma.postquery.model.ResponseMsgModel@60f77af] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@3946075]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@3946075] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@27f3f512, testMethod = testPostQuery@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testSuccessOthers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testSuccessOthers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@262a1fad] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@262a1fad] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6be6931f]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@6b4125ed]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@78da899f]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@e7b265e]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 15 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Method Initiated
Executing prepared SQL query
Executing prepared SQL statement [select ctgry_name from ask.ASK_CTGRY_TBL]
End of Method
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]
SQL update affected 1 rows
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_POST_TBL values(ask.post_id_seq.nextval,?,?,?,?,?,?,?)]
SQL update affected 1 rows
Query Successfully posted
Written [com.prokarma.postquery.model.ResponseMsgModel@60f77af] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@262a1fad]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@262a1fad] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@3cc79c02, testMethod = testSuccessOthers@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.postquery.controller.PostQueryControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.postquery.controller.PostQueryControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.postquery.controller.PostQueryControllerTest.wac
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.postquery.controller.PostQueryControllerTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e]
Adding transactional method 'com.prokarma.postquery.controller.PostQueryControllerTest.testPostFail' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testPostFail]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@4872669f] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@4872669f] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (5) for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@483f286e]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@4bb147ec]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@33f2cfda]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@68ef01a5]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/postquery]
Looking up handler method for path /ask/postquery
Returning handler method [public org.springframework.http.ResponseEntity<com.prokarma.postquery.model.ResponseMsgModel> com.prokarma.postquery.controller.PostQueryController.resetRequest(com.prokarma.postquery.model.PostQueryModel) throws java.text.ParseException]
Returning cached instance of singleton bean 'postQueryController'
Read [class com.prokarma.postquery.model.PostQueryModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL update
Executing prepared SQL statement [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]
Translating SQLException with SQL state '23000', error code '1400', message [ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")
]; SQL was [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)] for task [PreparedStatementCallback]
Failed To post query PreparedStatementCallback; SQL [insert into ASK.ASK_CTGRY_TBL values(ask.ctgry_id_seq.nextval,?,?,?,?,?,?)]; ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-01400: cannot insert NULL into ("ASK"."ASK_CTGRY_TBL"."CTGRY_NAME")

Written [com.prokarma.postquery.model.ResponseMsgModel@60f77af] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@4872669f]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@4872669f] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = com.prokarma.postquery.controller.PostQueryControllerTest@33d60b7e, testMethod = testPostFail@PostQueryControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@3a7b2e2 testClass = PostQueryControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5f0bab7e testClass = PostQueryControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.viewpost.model.TestViewModel].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@64763e49 declaringClass = 'com.prokarma.viewpost.model.TestViewModel', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.viewpost.model.TestViewModel]
@TestExecutionListeners is not present for class [com.prokarma.viewpost.model.TestViewModel]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@7e8279e5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@7e8279e5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
After test method: context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@7e8279e5, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@7e8279e5, testMethod = testPostQueryInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@131a7516, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@131a7516, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@131a7516, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@131a7516, testMethod = testPostReplyModelSet@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.viewpost.model.TestViewModel]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5ae15, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5ae15, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test method: context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5ae15, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = com.prokarma.viewpost.model.TestViewModel@5ae15, testMethod = testPostReplyInfo@TestViewModel, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@69cd7630 testClass = TestViewModel, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@23468512 testClass = TestViewModel, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.login.controller.LoginControllerTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@317890ea declaringClass = 'com.prokarma.login.controller.LoginControllerTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.login.controller.LoginControllerTest]
@TestExecutionListeners is not present for class [com.prokarma.login.controller.LoginControllerTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@37a0ec3c, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@37a0ec3c, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Autowiring by type from bean name 'com.prokarma.login.controller.LoginControllerTest' to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@6913c1fb'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@35adf623]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@456f7d9e]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@75d366c2]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@8f40022]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='mohan']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@73c48264] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@37a0ec3c, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@37a0ec3c, testMethod = testCheckCredentials@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5ef85555, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5ef85555, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2dafae61]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@7a2fce12]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@66e17eff]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@4bb1b96b]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing GET request for [/ask/sampleLogin]
Looking up handler method for path /ask/sampleLogin
Returning handler method [public java.lang.String com.prokarma.login.controller.LoginController.sample()]
Returning cached instance of singleton bean 'loginController'
Last-Modified value for [/ask/sampleLogin] is: -1
Written [welcome to login controller] as "text/plain" using [org.springframework.http.converter.StringHttpMessageConverter@4a070cf0]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5ef85555, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@5ef85555, testMethod = testsample@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@764b14b8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@764b14b8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1f782c05]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@6d6ac396]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@432af457]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@f5a7226]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing SQL query [select emp_id,fst_name,last_name from ask.ask_user_tbl where u_name='madhu']
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Executing prepared SQL query
Executing prepared SQL statement [select role_name from ask.ask_role_tbl role JOIN ask.ask_map_roleCtgry map on role.role_id=map.role_id WHERE emp_id=(select  emp_id from ask.ask_user_tbl where u_name=?)]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@100ad67e] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@764b14b8, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@764b14b8, testMethod = testCheckCredentialsEmp@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@713a35c5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@713a35c5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@11787b64]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@5707f613]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@77b3752b]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@6367a688]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Failed to resolve argument 0 of type 'com.prokarma.login.model.UserModel'
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:238)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:223)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:201)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:128)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:170)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:137)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:141)
	at com.prokarma.login.controller.LoginControllerTest.testCheckCredentialsError(LoginControllerTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:83)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:74)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:456)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2656)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:832)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:129)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2810)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:235)
	... 70 more
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
Resolving exception from handler [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: java.io.PushbackInputStream@35bfa1bb; line: 1, column: 14]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@713a35c5, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@713a35c5, testMethod = testCheckCredentialsError@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@68b11545, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@68b11545, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@357bc488]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@4ea17147]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2eda4eeb]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5ba90d8a]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@9a20cbd] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@68b11545, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@68b11545, testMethod = testCheckCredentialsFail@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.login.controller.LoginControllerTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1af4955e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1af4955e, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.login.controller.LoginControllerTest': AutowiredFieldElement for private org.springframework.web.context.WebApplicationContext com.prokarma.login.controller.LoginControllerTest.wac
Initializing servlet ''
Initializing Spring FrameworkServlet ''
FrameworkServlet '': initialization started
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2c0c4c0a]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@35d26ad2]
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@bb25753]
Returning cached instance of singleton bean 'mvcViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@ee21292]
Published WebApplicationContext of servlet '' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.]
FrameworkServlet '': initialization completed in 0 ms
Servlet '' configured successfully
DispatcherServlet with name '' processing POST request for [/ask/checkCredentials]
Looking up handler method for path /ask/checkCredentials
Returning handler method [public com.prokarma.login.model.ResponseModel com.prokarma.login.controller.LoginController.checkCredentials(com.prokarma.login.model.UserModel)]
Returning cached instance of singleton bean 'loginController'
Read [class com.prokarma.login.model.UserModel] as "application/json" with [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Executing prepared SQL query
Executing prepared SQL statement [select user_key from ASK.ask_user_tbl where u_name=?]
Fetching JDBC Connection from DataSource
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Returning JDBC Connection to DataSource
Written [com.prokarma.login.model.ResponseModel@7f73ce28] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@78307a56]
Null ModelAndView returned to DispatcherServlet with name '': assuming HandlerAdapter completed request handling
Successfully completed request
After test method: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1af4955e, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = com.prokarma.login.controller.LoginControllerTest@1af4955e, testMethod = testCheckCredentialsInvalidPass@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@53aa38be testClass = LoginControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2c719bd4 testClass = LoginControllerTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
SpringJUnit4ClassRunner constructor called with [class com.prokarma.sme.service.SMEServiceTest].
Found explicit ContextLoader class [org.springframework.test.context.web.AnnotationConfigWebContextLoader] for context configuration attributes [ContextConfigurationAttributes@40ce9049 declaringClass = 'com.prokarma.sme.service.SMEServiceTest', locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader']
Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.prokarma.sme.service.SMEServiceTest]
@TestExecutionListeners is not present for class [com.prokarma.sme.service.SMEServiceTest]: using defaults.
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Autowiring by type from bean name 'com.prokarma.sme.service.SMEServiceTest' to bean named 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@697d6ded]
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdatePost() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testUpdateReply() throws java.text.ParseException
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Unable to apply any optimizations to advised method: public void com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName()
Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
Unable to apply any optimizations to advised method: public java.lang.String java.lang.Object.toString()
Found 'hashCode' method: public native int java.lang.Object.hashCode()
Unable to apply any optimizations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdateReply' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @TransactionConfiguration attributes [null] for test class [class com.prokarma.sme.service.SMEServiceTest].
Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@4f281aaf transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.prokarma.sme.service.SMEServiceTest].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdateReply]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@5d508d22] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@5d508d22] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (1) for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@5d508d22]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@5d508d22] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@697d6ded, testMethod = testUpdateReply@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@f2b90fc]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testUpdatePost' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testUpdatePost]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@2bb41f5c] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@2bb41f5c] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (2) for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@2bb41f5c]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@2bb41f5c] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@f2b90fc, testMethod = testUpdatePost@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@24c685e7]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@7da635c0] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@7da635c0] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (3) for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@7da635c0]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@7da635c0] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@24c685e7, testMethod = testGetCtrgyName@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Retrieved @ProfileValueSourceConfiguration [null] for test class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.prokarma.sme.service.SMEServiceTest]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Performing dependency injection for test context [[DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]].
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Processing injected element of bean 'com.prokarma.sme.service.SMEServiceTest': AutowiredFieldElement for private com.prokarma.sme.services.ISmeService com.prokarma.sme.service.SMEServiceTest.iSmeService
Returning cached instance of singleton bean 'smeServiceImpl'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating implicit proxy for bean 'com.prokarma.sme.service.SMEServiceTest' with 0 common interceptors and 1 specific interceptors
Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.prokarma.sme.service.SMEServiceTest@2ed9f6f8]
Adding transactional method 'com.prokarma.sme.service.SMEServiceTest.testGetCtrgyNameCatch' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Returning cached instance of singleton bean 'transactionManager'
Creating new transaction with name [testGetCtrgyNameCatch]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.200.80)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=gtp6b.prokarma.com)))]
Acquired Connection [oracle.jdbc.driver.T4CConnection@251c4280] for JDBC transaction
Switching JDBC Connection [oracle.jdbc.driver.T4CConnection@251c4280] to manual commit
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Began transaction (4) for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c84195]; rollback [true]
Executing prepared SQL query
Executing prepared SQL statement [select a.ctgry_name from ask.ask_ctgry_tbl a left join ask.ask_map_roleCtgry b on a.ctgry_id=b.ctgry_id where emp_id=?]
No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
Initiating transaction rollback
Rolling back JDBC transaction on Connection [oracle.jdbc.driver.T4CConnection@251c4280]
Releasing JDBC Connection [oracle.jdbc.driver.T4CConnection@251c4280] after transaction
Returning JDBC Connection to DataSource
Rolled back transaction after test execution for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]]
After test method: context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
Resetting RequestContextHolder for test context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = com.prokarma.sme.service.SMEServiceTest@2ed9f6f8, testMethod = testGetCtrgyNameCatch@SMEServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]].
After test class: context [DefaultTestContext@65c5bf0e testClass = SMEServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52ca2652 testClass = SMEServiceTest, locations = '{}', classes = '{class com.prokarma.common.config.ConfigurationClass}', contextInitializerClasses = '[]', activeProfiles = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.AnnotationConfigWebContextLoader', parent = [null]]], dirtiesContext [false].
Closing org.springframework.web.context.support.GenericWebApplicationContext@6913c1fb: startup date [Tue Aug 21 14:26:11 IST 2018]; root of context hierarchy
Returning cached instance of singleton bean 'lifecycleProcessor'
Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4686afc2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,configurationClass,adminController,adminDAOImpl,adminServiceImpl,askAspectClass,forgotPasswordController,forgotPasswordDaoImpl,forgotPasswordServiceImpl,mailServiceImpl,loginController,loginDaoImple,loginServiceImpl,menuDaoImpl,menuServiceImpl,postQueryController,postQueryDaoImpl,postQueryServiceImpl,searchController,smeController,smeDaoImpl,smeServiceImpl,newUserController,retrieveUserProfileController,updateUserProfileController,retrieveUserProfileDaoImpl,viewController,viewDaoImpl,viewAllPostService,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcPathMatcher,mvcUrlPathHelper,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,dataSource,transactionManager,jdbcTemplate,namedparameterjdbctemplate,javaMailSenderImpl,userProfileDao,mailService,forgotpasswordservice,newUserService,newUserProfile,searchService,searchDao,retrieveUserProfileServiceImpl,updateUserProfileDaoImpl,updateUserProfileServiceImpl]; root of factory hierarchy
Retrieved dependent beans for bean 'mvcResourceUrlProvider': [requestMappingHandlerMapping]
